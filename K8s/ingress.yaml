---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: sidita-v3
  # annotations:
  #   nginx.ingress.kubernetes.io/proxy-body-size: "0"
  labels:
    tier: frontend
spec:
  # ingressClassName: nginx
  rules:
    - host: app.sidita.id
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nextjs-sidita-service
                port:
                  number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: sidita-v3
  annotations:
    # nginx.ingress.kubernetes.io/proxy-body-size: "0"
    # nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.sidita.id"
    # nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    # nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type"
    # nginx.ingress.kubernetes.io/cors-expose-headers: "Authorization"
 #   nginx.ingress.kubernetes.io/rewrite-target: /$2
    traefik.ingress.kubernetes.io/cors-allow-origin: "http://app.sidita.id"
    traefik.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    traefik.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type"
    traefik.ingress.kubernetes.io/cors-expose-headers: "Authorization"
  labels:
    tier: backend
spec:
  # ingressClassName: nginx
  rules:
    - host: api.sidita.id
      http:
        paths:
        - pathType: Prefix
          path: /auth/
          backend:
            service:
              name: auth-service
              port:
                number: 8080
        - pathType: Prefix
          path: /project/
          backend:
            service:
              name: project-service
              port:
                number: 8081
        - pathType: Prefix
          path: /dashboard/
          backend:
            service:
              name: dashboard-service
              port:
                number: 8083
